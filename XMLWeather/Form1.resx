<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAM6F92eMofsXaDOAAAAABJRU5ErkJggg==
</value>
  </data>
</root>